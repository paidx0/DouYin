// Code generated by goctl. DO NOT EDIT.
// Source: relation.proto

package relationrpc

import (
	"context"

	"DouYin/server/relation/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ActionReq  = __.ActionReq
	ActionResp = __.ActionResp
	ListReq    = __.ListReq
	ListResp   = __.ListResp
	User       = __.User

	RelationRpc interface {
		// 关注和取消操作
		RelationAction(ctx context.Context, in *ActionReq, opts ...grpc.CallOption) (*ActionResp, error)
		// 用户关注列表
		FollowList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
		// 用户粉丝列表
		FollowerList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
		// 用户好友列表
		FriendList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
	}

	defaultRelationRpc struct {
		cli zrpc.Client
	}
)

func NewRelationRpc(cli zrpc.Client) RelationRpc {
	return &defaultRelationRpc{
		cli: cli,
	}
}

// 关注和取消操作
func (m *defaultRelationRpc) RelationAction(ctx context.Context, in *ActionReq, opts ...grpc.CallOption) (*ActionResp, error) {
	client := __.NewRelationRpcClient(m.cli.Conn())
	return client.RelationAction(ctx, in, opts...)
}

// 用户关注列表
func (m *defaultRelationRpc) FollowList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	client := __.NewRelationRpcClient(m.cli.Conn())
	return client.FollowList(ctx, in, opts...)
}

// 用户粉丝列表
func (m *defaultRelationRpc) FollowerList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	client := __.NewRelationRpcClient(m.cli.Conn())
	return client.FollowerList(ctx, in, opts...)
}

// 用户好友列表
func (m *defaultRelationRpc) FriendList(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	client := __.NewRelationRpcClient(m.cli.Conn())
	return client.FriendList(ctx, in, opts...)
}
