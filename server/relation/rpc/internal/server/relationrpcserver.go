// Code generated by goctl. DO NOT EDIT.
// Source: relation.proto

package server

import (
	"context"

	"DouYin/server/relation/pb"
	"DouYin/server/relation/rpc/internal/logic"
	"DouYin/server/relation/rpc/internal/svc"
)

type RelationRpcServer struct {
	svcCtx *svc.ServiceContext
	__.UnimplementedRelationRpcServer
}

func NewRelationRpcServer(svcCtx *svc.ServiceContext) *RelationRpcServer {
	return &RelationRpcServer{
		svcCtx: svcCtx,
	}
}

// 关注和取消操作
func (s *RelationRpcServer) RelationAction(ctx context.Context, in *__.ActionReq) (*__.ActionResp, error) {
	l := logic.NewRelationActionLogic(ctx, s.svcCtx)
	return l.RelationAction(in)
}

// 用户关注列表
func (s *RelationRpcServer) FollowList(ctx context.Context, in *__.ListReq) (*__.ListResp, error) {
	l := logic.NewFollowListLogic(ctx, s.svcCtx)
	return l.FollowList(in)
}

// 用户粉丝列表
func (s *RelationRpcServer) FollowerList(ctx context.Context, in *__.ListReq) (*__.ListResp, error) {
	l := logic.NewFollowerListLogic(ctx, s.svcCtx)
	return l.FollowerList(in)
}

// 用户好友列表
func (s *RelationRpcServer) FriendList(ctx context.Context, in *__.ListReq) (*__.ListResp, error) {
	l := logic.NewFriendListLogic(ctx, s.svcCtx)
	return l.FriendList(in)
}
