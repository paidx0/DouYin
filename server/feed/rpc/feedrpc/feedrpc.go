// Code generated by goctl. DO NOT EDIT!
// Source: feed.proto

package feedrpc

import (
	"context"

	"DouYin/server/feed/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FeedReq  = __.FeedReq
	FeedResp = __.FeedResp
	Video    = __.Video

	FeedRpc interface {
		Feed(ctx context.Context, in *FeedReq, opts ...grpc.CallOption) (*FeedResp, error)
	}

	defaultFeedRpc struct {
		cli zrpc.Client
	}
)

func NewFeedRpc(cli zrpc.Client) FeedRpc {
	return &defaultFeedRpc{
		cli: cli,
	}
}

func (m *defaultFeedRpc) Feed(ctx context.Context, in *FeedReq, opts ...grpc.CallOption) (*FeedResp, error) {
	client := __.NewFeedRpcClient(m.cli.Conn())
	return client.Feed(ctx, in, opts...)
}
